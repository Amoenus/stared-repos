{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/oliver_almalel/Desktop/Ruby Projects/Curriculum/09 GraphQL/W18D4 Frontend User Auth/online_store_part_2/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    mutation NewProduct($name: String!, $description: String!, $weight: Float) {\\n      newProduct(name: $name, description: $description, weight: $weight) {\\n        # _id\\n        name\\n        description\\n        weight\\n      }\\n    }\\n  \"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    mutation RegisterUser($name: String!, $email: String!, $password: String!) {\\n      register(name: $name, email: $email, password: $password) {\\n        token\\n        loggedIn\\n      }\\n    }\\n  \"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    mutation VerifyUser($token: String!) {\\n      verifyUser(token: $token) {\\n        loggedIn\\n      }\\n    }\\n  \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    mutation LoginUser($email: String!, $password: String!) {\\n      login(email: $email, password: $password) {\\n        token\\n        loggedIn\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nconst Mutations = {\n  LOGIN_USER: gql(_templateObject()),\n  VERIFY_USER: gql(_templateObject2()),\n  REGISTER_USER: gql(_templateObject3()),\n  CREATE_PRODUCT: gql(_templateObject4())\n};\nexport default Mutations;","map":{"version":3,"sources":["/Users/oliver_almalel/Desktop/Ruby Projects/Curriculum/09 GraphQL/W18D4 Frontend User Auth/online_store_part_2/client/src/graphql/mutations.js"],"names":["gql","Mutations","LOGIN_USER","VERIFY_USER","REGISTER_USER","CREATE_PRODUCT"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,MAAMC,SAAS,GAAG;AAEhBC,EAAAA,UAAU,EAAEF,GAAF,mBAFM;AAUhBG,EAAAA,WAAW,EAAEH,GAAF,oBAVK;AAiBhBI,EAAAA,aAAa,EAAEJ,GAAF,oBAjBG;AAyBhBK,EAAAA,cAAc,EAAEL,GAAF;AAzBE,CAAlB;AAqCA,eAAeC,SAAf","sourcesContent":["import gql from 'graphql-tag';\n\nconst Mutations = {\n  \n  LOGIN_USER: gql`\n    mutation LoginUser($email: String!, $password: String!) {\n      login(email: $email, password: $password) {\n        token\n        loggedIn\n      }\n    }\n  `,\n  VERIFY_USER: gql`\n    mutation VerifyUser($token: String!) {\n      verifyUser(token: $token) {\n        loggedIn\n      }\n    }\n  `,\n  REGISTER_USER: gql`\n    mutation RegisterUser($name: String!, $email: String!, $password: String!) {\n      register(name: $name, email: $email, password: $password) {\n        token\n        loggedIn\n      }\n    }\n  `,\n  CREATE_PRODUCT: gql`\n    mutation NewProduct($name: String!, $description: String!, $weight: Float) {\n      newProduct(name: $name, description: $description, weight: $weight) {\n        # _id\n        name\n        description\n        weight\n      }\n    }\n  `,\n}\n\nexport default Mutations"]},"metadata":{},"sourceType":"module"}