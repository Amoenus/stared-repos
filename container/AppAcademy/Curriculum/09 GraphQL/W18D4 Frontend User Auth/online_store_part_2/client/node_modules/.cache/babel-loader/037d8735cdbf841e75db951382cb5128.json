{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/oliver_almalel/Desktop/Ruby Projects/Curriculum/09 GraphQL/W18D4 Frontend User Auth/online_store_part_2/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/oliver_almalel/Desktop/Ruby Projects/Curriculum/09 GraphQL/W18D4 Frontend User Auth/online_store_part_2/client/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    products {\\n      _id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nconst FETCH_PRODUCTS = gql(_templateObject());\n\nconst App = () => {\n  return React.createElement(Query, {\n    query: FETCH_PRODUCTS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return \"Loading...\";\n    if (error) return \"Error! \".concat(error.message);\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, data.products.map(product => React.createElement(\"li\", {\n      key: product._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, product.name)));\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/oliver_almalel/Desktop/Ruby Projects/Curriculum/09 GraphQL/W18D4 Frontend User Auth/online_store_part_2/client/src/App.js"],"names":["React","gql","Query","FETCH_PRODUCTS","App","loading","error","data","message","products","map","product","_id","name"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,MAAMC,cAAc,GAAGF,GAAH,mBAApB;;AASA,MAAMG,GAAG,GAAG,MAAM;AAChB,SACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAD,KAA8B;AAC7B,QAAIF,OAAJ,EAAa,OAAO,YAAP;AACb,QAAIC,KAAJ,EAAW,wBAAiBA,KAAK,CAACE,OAAvB;AAEX,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACE,QAAL,CAAcC,GAAd,CAAkBC,OAAO,IACxB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBD,OAAO,CAACE,IAA/B,CADD,CADH,CADF;AAOD,GAZH,CADF;AAgBD,CAjBD;;AAmBA,eAAeT,GAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\n\nconst FETCH_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n    }\n  }\n`;\n\nconst App = () => {\n  return (\n    <Query query={FETCH_PRODUCTS}>\n      {({ loading, error, data }) => {\n        if (loading) return \"Loading...\";\n        if (error) return `Error! ${error.message}`;\n\n        return (\n          <ul>\n            {data.products.map(product => (\n              <li key={product._id}>{product.name}</li>\n            ))}\n          </ul>\n        );\n      }}\n    </Query>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}