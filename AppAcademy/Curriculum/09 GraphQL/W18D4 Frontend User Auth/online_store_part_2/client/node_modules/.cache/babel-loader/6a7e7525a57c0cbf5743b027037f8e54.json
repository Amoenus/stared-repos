{"ast":null,"code":"var _jsxFileName = \"/Users/oliver_almalel/Desktop/Ruby Projects/Curriculum/09 GraphQL/W18D4 Frontend User Auth/online_store_part_2/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { onError } from \"apollo-link-error\";\nimport { ApolloLink } from \"apollo-link\";\nconst cache = new InMemoryCache({\n  dataIdFromObject: object => object._id || null\n});\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:5000/graphql\"\n}); // make sure we log any additional errors we receive\n// const errorLink = onError(({ graphQLErrors }) => {\n//   if (graphQLErrors) graphQLErrors.map(({ message }) => console.log(message));\n// });\n// const client = new ApolloClient({\n//   link: ApolloLink.from([errorLink, httpLink]),\n//   cache\n// });\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache,\n  onError: ({\n    networkError,\n    graphQLErrors\n  }) => {\n    console.log(\"graphQLErrors\", graphQLErrors);\n    console.log(\"networkError\", networkError);\n  }\n});\n\nconst Root = () => {\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(Root, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/oliver_almalel/Desktop/Ruby Projects/Curriculum/09 GraphQL/W18D4 Frontend User Auth/online_store_part_2/client/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","ApolloClient","InMemoryCache","createHttpLink","ApolloProvider","onError","ApolloLink","cache","dataIdFromObject","object","_id","httpLink","uri","client","link","networkError","graphQLErrors","console","log","Root","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,MAAMC,KAAK,GAAG,IAAIL,aAAJ,CAAkB;AAC9BM,EAAAA,gBAAgB,EAAEC,MAAM,IAAIA,MAAM,CAACC,GAAP,IAAc;AADZ,CAAlB,CAAd;AAIA,MAAMC,QAAQ,GAAGR,cAAc,CAAC;AAC9BS,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B,C,CAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAG,IAAIZ,YAAJ,CAAiB;AAC9Ba,EAAAA,IAAI,EAAEH,QADwB;AAE9BJ,EAAAA,KAF8B;AAG9BF,EAAAA,OAAO,EAAE,CAAC;AAAEU,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAD,KAAqC;AAC5CC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,aAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,YAA5B;AACD;AAN6B,CAAjB,CAAf;;AASA,MAAMI,IAAI,GAAG,MAAM;AACjB,SACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEN,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND;;AAQAf,QAAQ,CAACsB,MAAT,CAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B,E,CAEA;AACA;AACA;;AACAtB,aAAa,CAACuB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { onError } from \"apollo-link-error\";\nimport { ApolloLink } from \"apollo-link\";\n\nconst cache = new InMemoryCache({\n  dataIdFromObject: object => object._id || null\n});\n\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:5000/graphql\"\n});\n\n// make sure we log any additional errors we receive\n// const errorLink = onError(({ graphQLErrors }) => {\n//   if (graphQLErrors) graphQLErrors.map(({ message }) => console.log(message));\n// });\n\n// const client = new ApolloClient({\n//   link: ApolloLink.from([errorLink, httpLink]),\n//   cache\n// });\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache,\n  onError: ({ networkError, graphQLErrors }) => {\n    console.log(\"graphQLErrors\", graphQLErrors);\n    console.log(\"networkError\", networkError);\n  }\n});\n\nconst Root = () => {\n  return (\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  );\n};\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}