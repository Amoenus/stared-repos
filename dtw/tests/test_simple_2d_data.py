import numpy as np

from dtw import dtw


def l2_norm(x, y):
    return (x - y) ** 2


def test_simple_2d_data():
    x = np.array([2, 0, 1, 1, 2, 4, 2, 1, 2, 0]).reshape(-1, 1)
    y = np.array([1, 1, 2, 4, 2, 1, 2, 0]).reshape(-1, 1)

    dist, cost_matrix, acc_cost_matrix, path = dtw(x, y, dist=l2_norm)

    assert dist == 2

    assert (
        cost_matrix
        == np.array(
            [
                [1.0, 1.0, 0.0, 4.0, 0.0, 1.0, 0.0, 4.0],
                [1.0, 1.0, 4.0, 16.0, 4.0, 1.0, 4.0, 0.0],
                [0.0, 0.0, 1.0, 9.0, 1.0, 0.0, 1.0, 1.0],
                [0.0, 0.0, 1.0, 9.0, 1.0, 0.0, 1.0, 1.0],
                [1.0, 1.0, 0.0, 4.0, 0.0, 1.0, 0.0, 4.0],
                [9.0, 9.0, 4.0, 0.0, 4.0, 9.0, 4.0, 16.0],
                [1.0, 1.0, 0.0, 4.0, 0.0, 1.0, 0.0, 4.0],
                [0.0, 0.0, 1.0, 9.0, 1.0, 0.0, 1.0, 1.0],
                [1.0, 1.0, 0.0, 4.0, 0.0, 1.0, 0.0, 4.0],
                [1.0, 1.0, 4.0, 16.0, 4.0, 1.0, 4.0, 0.0],
            ]
        )
    ).all()

    assert (
        acc_cost_matrix
        == np.array(
            [
                [1.0, 2.0, 2.0, 6.0, 6.0, 7.0, 7.0, 11.0],
                [2.0, 2.0, 6.0, 18.0, 10.0, 7.0, 11.0, 7.0],
                [2.0, 2.0, 3.0, 12.0, 11.0, 7.0, 8.0, 8.0],
                [2.0, 2.0, 3.0, 12.0, 12.0, 7.0, 8.0, 9.0],
                [3.0, 3.0, 2.0, 6.0, 6.0, 7.0, 7.0, 11.0],
                [12.0, 12.0, 6.0, 2.0, 6.0, 15.0, 11.0, 23.0],
                [13.0, 13.0, 6.0, 6.0, 2.0, 3.0, 3.0, 7.0],
                [13.0, 13.0, 7.0, 15.0, 3.0, 2.0, 3.0, 4.0],
                [14.0, 14.0, 7.0, 11.0, 3.0, 3.0, 2.0, 6.0],
                [15.0, 15.0, 11.0, 23.0, 7.0, 4.0, 6.0, 2.0],
            ]
        )
    ).all()

    assert (path[0] == np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])).all()
    assert (path[1] == np.array([0, 0, 0, 1, 2, 3, 4, 5, 6, 7])).all()
